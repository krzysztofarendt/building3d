from building3d.geom.mesh import vstack_mesh
from building3d.geom.solid import Solid
from building3d.geom.types import IndexType
from building3d.geom.types import PointType


def get_mesh_from_solids(solids: list[Solid]) -> tuple[PointType, IndexType]:
    """Get vertices and faces of this zone's solids.

    This function returns faces generated by the ear-clipping algorithm.

    Args:
        solids: list of Solid instances

    Return:
        tuple of vertices, shaped (num_pts, 3), and faces, shaped (num_tri, 3)
    """
    object_meshes = tuple(s.get_mesh() for s in solids)
    t_pts = tuple(msh[0] for msh in object_meshes)
    t_tri = tuple(msh[1] for msh in object_meshes)
    return vstack_mesh(t_pts, t_tri)
